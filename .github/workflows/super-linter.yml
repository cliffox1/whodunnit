# This workflow executes several linters on changed files based on languages used in your code base whenever
# you push a code or open a pull request.
#
# You can adjust the behavior by modifying this file.
# For more information, see:
# https://github.com/github/super-linter
name: Lint Code Base

on:
  pull_request:
    branches: [ "main" ]
    types:
      - opened
      
  workflow_dispatch:
  
jobs:
  lint_project:
    name: Run SQLFluff linter
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v3"
        with:
          fetch-depth: 0
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.10"
      - name: Install SQLFluff
        run: "pip install sqlfluff"
        
      - name: Get specific changed files
        id: changed-files-specific
        uses: tj-actions/changed-files@v35 
        with:  
          since_last_remote_commit: true
          files: |
            **/*.sql
            
      - name: Run step if only the files listed above change
        id: get_files_to_lint
        if: steps.changed-files-specific.outputs.only_changed == 'true'
        shell: bash -l {0}
        run: |
          mylintees=$(
          echo \
          $(echo ${{ steps.changed-files-specific.outputs.only_changed }}
          
          )
            echo "mylintees =$mylintees"

       
      - name: Lint Code Base
        id: sqlfluff_json
        shell: bash -l {0}
        run: |
          sqlfluff lint --format github-annotation --annotation-level failure ${{ steps.changed-files-specific.outputs.only_changed }}> annotations.json
          
      - name: Annotate
        uses: yuzutech/annotations-action@v0.4.0
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          title: 'lint'
          input: './annotations.json'
      
      
      
#       - name: Lint Code Base
#         id: sqlfluff_json
#         if: steps.changed-files-specific.outputs.only_changed == 'true'
#         shell: bash -l {0}
#         run: sqlfluff lint --format github-annotation --annotation-level failure --nofail ${{ steps.changed-files-specific.outputs.only_changed}} > annotations.json





#       - name: Get changed .sql files in /models to lint
#         id: get_files_to_lint
#         shell: bash -l {0}
#         run: |
#           # Set the command in the $() brackets as an output to use in later steps
#           mylintees=$(
#           # Issue where grep regular expressions don't work as expected on the
#           # Github Actions shell, check dbt/models/ folder
#           echo \
#           $(echo ${{ steps.changed-files.outputs.all_changed_and_modified_files}} |
#           tr -s ' ' '\n' |
#           grep -E '^.+\/models\/.+\/.+\.sql$' |
#           tr -s '\n' ' ')
#           )
#           echo "mylintees =$mylintees"
          
#           # Set the command in the $() brackets as an output to use in later steps
#           echo "lintees=$(
#           # Issue where grep regular expressions don't work as expected on the
#           # Github Actions shell, check dbt/models/ folder
#           echo \
#           $(echo ${{ steps.changed-files.outputs.all_changed_and_modified_files}} |
#           tr -s ' ' '\n' |
#           grep -E '^.+\/models\/.+\/.+\.sql$' |
#           tr -s '\n' ' ')
#           )" >> $GITHUB_OUTPUT
        
#       - name: Lint Code Base
#         id: sqlfluff_json
#         if: steps.get_files_to_lint.outputs.lintees != ''
#         shell: bash -l {0}
#         run: sqlfluff lint --format github-annotation --annotation-level failure --nofail ${{ steps.get_files_to_lint.outputs.lintees }} > annotations.json

